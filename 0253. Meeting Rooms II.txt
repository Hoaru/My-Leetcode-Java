class Solution {
    public int minMeetingRooms(int[][] intervals) {
        if(intervals.length == 0) return 0;
        if(intervals.length == 1) return 1;
        else{
            Arrays.sort(intervals, (int[] a, int[] b) -> a[0] - b[0]);
            PriorityQueue<Integer> pqMin = new PriorityQueue<>();
            pqMin.add(intervals[0][1]);
            for(int i = 1; i < intervals.length; i++){
                //exm: new-(3, 5) old-(1, 4)
                if(intervals[i][0] < pqMin.peek()){
                    pqMin.add(intervals[i][1]);
                }
                //exm: new-(4, 7) old-(1, 4)
                else{
                    pqMin.poll();
                    pqMin.add(intervals[i][1]);
                }
            }
            return pqMin.size();
        }
    }
}