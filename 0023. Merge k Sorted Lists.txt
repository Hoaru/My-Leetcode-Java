class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode head = new ListNode(0);
        ListNode now = head;
        ArrayList<ListNode> arr = new ArrayList<>();
        for(ListNode i : lists){
            if(i != null)
                arr.add(i);
        }
        if(arr.size() == 0) return null;

        int minIndex;
        int minVal;
        while(!arr.isEmpty()){
            minIndex = 0;
            minVal = arr.get(minIndex).val;
            for(int i = 1; i < arr.size(); i++){
                ListNode curr = arr.get(i);
                if(curr.val < minVal){
                    minVal = curr.val;
                    minIndex = i;
                }
            }
            now.next = arr.get(minIndex);
            now = now.next; 
            if(arr.get(minIndex).next == null) arr.remove(minIndex);
            else arr.set(minIndex, arr.get(minIndex).next);
        }
        return head.next;
    }
}
