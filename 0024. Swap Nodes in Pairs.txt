class Solution {
    public ListNode swapPairs(ListNode head) {
        int num = 0;
        HashMap<Integer, ListNode> map = new HashMap<>();
        ListNode curr = head;
        while(curr != null){
            map.put(num++, curr);
            ListNode last = curr;
            curr = curr.next;
            last.next = null;
        }
        if(num <= 1) return head;
        boolean odd = (num % 2 == 1);
        if(odd) num -= 1;
        ListNode root = new ListNode(0);
        curr = root;
        int i = 1;
        while(i <= num){
            curr.next = map.get(i);
            curr = curr.next;
            curr.next = map.get(i - 1);
            curr = curr.next;
            i += 2;
        }
        curr.next = null;
        if(odd){
            curr.next = map.get(num);
        }
        return root.next;
    }
}