class Solution {

    public int trap(int[] height) {
        int len = height.length;
        int[] leftMax = new int[len];
        int[] rightMax = new int[len];
        for(int i = 1; i < len; i++){
            leftMax[i] = Math.max(leftMax[i - 1], height[i - 1]);
        }
        for(int i = len - 2; i > -1; i--){
            rightMax[i] = Math.max(rightMax[i + 1], height[i + 1]);
        }
        int sum = 0;
        for(int i = 0; i < len; i++){
            int shortside = Math.min(leftMax[i], rightMax[i]);
            if(shortside > height[i])
                sum += (shortside - height[i]);
        }
        return sum;
    }
}