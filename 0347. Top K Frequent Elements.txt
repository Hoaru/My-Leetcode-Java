class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> hash = new HashMap<>();
        for(int i : nums){
            if(!hash.containsKey(i)){
                hash.put(i, 1);
            }
            else{
                hash.put(i, hash.get(i) + 1);
            }
        }
        int[] res = new int[k];
        ArrayList<Map.Entry<Integer, Integer>> ahash = new ArrayList<>(hash.entrySet());
        Collections.sort(ahash, new Comparator<Map.Entry<Integer, Integer>>(){
            public int compare(Map.Entry<Integer, Integer> e1, Map.Entry<Integer, Integer> e2){
                return e2.getValue() - e1.getValue();
            }
        });
        int n = 0;
        for(Map.Entry<Integer, Integer> i: ahash){
            if(n <= k - 1)
                res[n++] = i.getKey();
        }
        return res;
    }
}