class TrieNode{
        boolean end;
        HashMap<Character, TrieNode> hash = new HashMap<>();
    }

    class Trie {
        public TrieNode root;

        public Trie() {
             root = new TrieNode();
        }

        public void insert(String word) {
            TrieNode curr = root;
            for(char c: word.toCharArray()){
                if(!curr.hash.containsKey(c)){
                    curr.hash.put(c, new TrieNode());
                }
                curr = curr.hash.get(c);
            }
            curr.end = true;
        }

        public TrieNode getLast(String word){
            TrieNode curr = root;
            for(char c : word.toCharArray()){
                if(!curr.hash.containsKey(c))
                    return null;
                curr = curr.hash.get(c);
            }
            return curr;
        }

        public boolean search(String word) {
            TrieNode res = getLast(word);
            if(res == null) return false;
            else return res.end;
        }

        public boolean startsWith(String prefix) {
            TrieNode res = getLast(prefix);
            if(res == null) return false;
            else return true;
        }
    }