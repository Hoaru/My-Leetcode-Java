class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int len = intervals.length;
        List<List<Integer>> list = new ArrayList<>();
        int i = 0;
        while(i < len && intervals[i][1] < newInterval[0]){
            list.add(Arrays.asList(intervals[i][0], intervals[i][1]));
            i++;
        }
        while(i < len && intervals[i][0] <= newInterval[1]){
            newInterval[0] = Math.min(intervals[i][0], newInterval[0]);
            newInterval[1] = Math.max(intervals[i][1], newInterval[1]);
            i++;
        }
        list.add(Arrays.asList(newInterval[0], newInterval[1]));
        while(i < len){
            list.add(Arrays.asList(intervals[i][0], intervals[i][1]));
            i++;
        }
        int[][] res = new int[list.size()][2];
        int j = 0;
        for(List<Integer> e : list){
            res[j][0] = e.get(0);
            res[j][1] = e.get(1);
            j++;
        }
        return res;
    }
}