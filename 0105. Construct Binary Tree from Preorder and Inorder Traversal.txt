class Solution {
    
    public TreeNode buildTree(int[] pre, int [] in) {
        HashMap<Integer, Integer> hash = new HashMap<>();
        for(int i = 0; i < in.length; i++)
            hash.put(in[i], i);
        return helper(hash, in, pre, new int[]{0}, 0, in.length - 1);
    }

    public TreeNode helper(HashMap<Integer, Integer> hash, int[] in, int[] pre, int[] pi, int is, int ie){
        if(is > ie || pi[0] == in.length) return null;
        else if(is == ie){
            pi[0]++;
            return new TreeNode(in[is]);
        }
        else{
            int rootVal = pre[pi[0]++];
            TreeNode root = new TreeNode(rootVal);
            int pos = hash.get(rootVal);
            root.left = helper(hash, in, pre, pi, is, pos - 1);
            root.right = helper(hash, in, pre, pi, pos + 1, ie);
            return root;
        }
    }
}
