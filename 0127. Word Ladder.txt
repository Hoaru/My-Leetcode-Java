class Solution {
    public boolean trans(String s1, String s2){
        if(s1.length() != s2.length()) return false;
        int sum = 0;
        for(int i = 0; i < s1.length(); i++)
            if(s1.charAt(i) != s2.charAt(i)) sum += 1;
        return sum == 1 ? true : false;
    }
    
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        HashSet<String> words = new HashSet<>();
        for(String i : wordList) words.add(i);
        LinkedList<String> qu = new LinkedList<>();
        qu.add(beginWord);
        int dep = 1;
        while(!qu.isEmpty()){
            LinkedList<String> new_qu = new LinkedList<>();
            while(!qu.isEmpty()){
                String top = qu.poll();
                if(top.equals(endWord))
                    return dep;
                for(int i = 0; i < wordList.size();){
                    if(trans(top, wordList.get(i))){
                        new_qu.add(wordList.get(i));
                        wordList.remove(i);
                    }
                    else i++;
                }
            }
            dep += 1;
            qu = new_qu;
        }
        return 0;
    }
}